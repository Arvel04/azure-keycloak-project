- name: Set up container environment
  hosts: webserver
  become: true
  gather_facts: true  # Collecte des faits sur la machine cible

  vars:
    ansible_python_interpreter: /usr/bin/python3.6  # Sp√©cifier Python 3.6 explicitement

  tasks:
    - name: Ensure Python 3 is installed
      ansible.builtin.apt:
        name: python3
        state: present

    - name: Ensure pip for Python 3 is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present

    - name: Install pip if not present
      ansible.builtin.pip:
        name: pip
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Install future module for compatibility
      ansible.builtin.pip:
        name: future
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Install Python dependencies for Ansible
      ansible.builtin.pip:
        name:
          - python3-pip
          - python3-dev
          - build-essential
          - libssl-dev
          - libffi-dev
          - python3-setuptools
          - rustc
          - cargo
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Install Ansible on the VM
      ansible.builtin.pip:
        name: ansible
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Ensure Ansible version is correct
      ansible.builtin.command:
        cmd: "{{ ansible_python_interpreter }} -m ansible --version"
      register: ansible_version_output
      changed_when: false

    - name: Debug Ansible version
      ansible.builtin.debug:
        var: ansible_version_output.stdout

    # Additional tasks here, e.g., provisioning software
