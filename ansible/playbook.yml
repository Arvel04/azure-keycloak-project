---
- name: Set up container environment with Python 2.7
  hosts: webserver
  become: true
  gather_facts: true  # Collecte des faits sur la machine cible

  vars:
    ansible_python_interpreter: /usr/bin/python2.7  # Utiliser explicitement Python 2.7

  tasks:
    - name: Ensure Python 2.7 is installed
      ansible.builtin.apt:
        name: python2.7
        state: present

    - name: Ensure pip for Python 2.7 is installed
      ansible.builtin.apt:
        name: python-pip
        state: present

    - name: Install pip if not present (Python 2.7)
      ansible.builtin.pip:
        name: pip
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Install Python dependencies for Ansible
      ansible.builtin.pip:
        name:
          - python2.7-pip
          - python2.7-dev
          - build-essential
          - libssl-dev
          - libffi-dev
          - python2.7-setuptools
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Install Ansible 2.9.0 on the VM
      ansible.builtin.pip:
        name: ansible==2.9.0
        executable: "{{ ansible_python_interpreter }} -m pip"
        state: present

    - name: Ensure Ansible version is correct
      ansible.builtin.command:
        cmd: "{{ ansible_python_interpreter }} -m ansible --version"
      register: ansible_version_output
      changed_when: false

    - name: Debug Ansible version
      ansible.builtin.debug:
        var: ansible_version_output.stdout

    # Ajouter les r√¥les
    - name: Include roles for webserver setup
      ansible.builtin.include_role:
        name: common

    - name: Include docker role
      ansible.builtin.include_role:
        name: docker

    - name: Include keycloak role
      ansible.builtin.include_role:
        name: keycloak

    - name: Include webserver role
      ansible.builtin.include_role:
        name: webserver
