name: Rollout
on:
  push:
    branches:
      - main

jobs:
  rollout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform/

      - name: Authenticate with Azure
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
        working-directory: terraform/

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform/

      # Sauvegarder l'adresse IP de la VM dans un fichier JSON dans le répertoire terraform
      - name: Save VM IP address to JSON file
        run: terraform output -json > terraform/vm_ip.json
        working-directory: terraform/

      # Copier le fichier vm_ip.json dans le répertoire ansible
      - name: Copy IP JSON file to ansible directory
        run: cp terraform/vm_ip.json ansible/vm_ip.json

      # Générer l'inventaire dynamique avec le script Python
      - name: Generate dynamic inventory
        run: |
          python3 ansible/dynamic_inventory.py

      # Exécuter Ansible avec l'inventaire dynamique généré
      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/playbook.yml
          inventory: ansible/vm_inventory.json
