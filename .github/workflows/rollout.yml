name: Rollout
on:
  push:
    branches:
      - main

jobs:
  rollout:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Authenticate with Azure
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
        working-directory: terraform/

      - name: Initialize Terraform with Backend
        run: terraform init -backend-config="${GITHUB_WORKSPACE}/terraform/backend.tfvars"
        working-directory: terraform/

      - name: Apply Terraform to create VM
        run: terraform apply -auto-approve
        working-directory: terraform/
        timeout-minutes: 30

      - name: Get VM IP and private key from Terraform output
        id: get_outputs
        run: |
          VM_IP=$(terraform output -raw VM_IP | grep -oP '(\d{1,3}\.){3}\d{1,3}' | head -n 1)
          PRIVATE_KEY=$(terraform output -raw private_key)
          echo "$VM_IP" > $GITHUB_WORKSPACE/vm_ip.txt
          echo "$PRIVATE_KEY" > $GITHUB_WORKSPACE/id_ansible_rsa
        working-directory: terraform/

      - name: Export VM IP to environment file
        run: echo "VM_IP=$(cat $GITHUB_WORKSPACE/vm_ip.txt)" >> $GITHUB_ENV

      - name: Prepare SSH Directory
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts 
          chmod 600 ~/.ssh/known_hosts

      - name: Configure SSH for Ansible
        run: |
          mv $GITHUB_WORKSPACE/id_ansible_rsa ~/.ssh/id_ansible_rsa
          chmod 600 ~/.ssh/id_ansible_rsa

      - name: Add host key to known_hosts
        run: |
          ssh-keyscan -H $(cat $GITHUB_WORKSPACE/vm_ip.txt) >> ~/.ssh/known_hosts

      - name: Validate SSH Connectivity and Prepare Environment on VM
        run: |
          ssh -i ~/.ssh/id_ansible_rsa -o StrictHostKeyChecking=no secureadmin@$(cat $GITHUB_WORKSPACE/vm_ip.txt) << 'EOF'
            # Ajouter la clé publique dans authorized_keys si elle n'est pas déjà présente
            if ! grep -q "$(cat ~/.ssh/id_ansible_rsa.pub)" ~/.ssh/authorized_keys; then
              echo "$(cat ~/.ssh/id_ansible_rsa.pub)" >> ~/.ssh/authorized_keys
            fi
            # Assurer que les permissions sont correctement définies
            chmod 700 ~/.ssh
            chmod 600 ~/.ssh/authorized_keys
            # Ajouter l'hôte au fichier known_hosts
            ssh-keyscan -H $(cat $GITHUB_WORKSPACE/vm_ip.txt) >> ~/.ssh/known_hosts
            echo "SSH connectivity is working"
          EOF

      - name: Create Inventory with SSH Options
        run: |
          echo "[webserver]" > $GITHUB_WORKSPACE/ansible/hosts
          echo "$(cat $GITHUB_WORKSPACE/vm_ip.txt) ansible_user=secureadmin ansible_ssh_private_key_file=~/.ssh/id_ansible_rsa ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'" >> $GITHUB_WORKSPACE/ansible/hosts

      - name: Create Ansible Config
        run: |
          echo "[defaults]" > $GITHUB_WORKSPACE/ansible/ansible.cfg
          echo "host_key_checking = False" >> $GITHUB_WORKSPACE/ansible/ansible.cfg
          echo "inventory = $GITHUB_WORKSPACE/ansible/hosts" >> $GITHUB_WORKSPACE/ansible/ansible.cfg
        shell: bash

      - name: Copy Ansible Playbook and Roles
        run: |
          scp -i ~/.ssh/id_ansible_rsa -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/ansible secureadmin@$(cat $GITHUB_WORKSPACE/vm_ip.txt):~/ansible

      - name: Run Ansible Playbook
        run: |
          ssh -i ~/.ssh/id_ansible_rsa -o StrictHostKeyChecking=no secureadmin@$(cat $GITHUB_WORKSPACE/vm_ip.txt) << 'EOF'
            source ~/ansible-env/bin/activate
            ansible -i ~/ansible/hosts webserver -m ping -vvv
            ANSIBLE_CONFIG=~/ansible/ansible.cfg ansible-playbook -vvv -i ~/ansible/hosts ~/ansible/playbook.yml
          EOF
