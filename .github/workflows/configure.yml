name: Configure

on:
  push:
    branches:
      - main  # Déclenche ce workflow lors d'un push sur la branche principale
  pull_request:
    branches:
      - main  # Déclenche ce workflow lors d'un pull request vers la branche principale

jobs:
  configure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Authenticate with Azure
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
        working-directory: terraform/

      - name: Set up SSH Key and VM IP from Rollout Outputs
        run: |
          # Récupérer l'adresse IP de la VM créée dans le workflow Rollout
          echo "VM_IP=$(cat $GITHUB_WORKSPACE/vm_ip.txt)" >> $GITHUB_ENV
          
          # Préparer la clé SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ansible_rsa
          chmod 600 ~/.ssh/id_ansible_rsa
          
          # Ajouter l'IP de la VM aux known_hosts pour éviter un avertissement SSH
          ssh-keyscan -H "${{ env.VM_IP }}" >> ~/.ssh/known_hosts

      - name: Test SSH Connectivity
        run: |
          # Tester la connectivité SSH pour s'assurer que l'IP est correcte et accessible
          ssh -i ~/.ssh/id_ansible_rsa -o StrictHostKeyChecking=no secureadmin@${{ env.VM_IP }} echo "SSH connectivity is working"
          